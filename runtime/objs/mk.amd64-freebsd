# mk.amd64-freebsd
#
# makefile for "Free BSD" on the amd64 architecture, which is a BSD 4.4 clone.
#

SHELL =		/bin/sh

MAKE =		make
AS =		as --64
CC =		cc -std=gnu99
CFLAGS =	-O2 -m64
CXX =           c++ --std=c++17
CXX_FLAGS =     -g -O2
CPP =		cc -x assembler-with-cpp -E -P
XOBJS =
XLIBS =		../c-libs/dl/libunix-dynload.a
LD_LIBS =	-lm -ldl
#CHECK_HEAP =	check-heap.o
XDEFS =
BASE_DEFS =
DEFS =		$(XDEFS) $(BASE_DEFS) -DARCH_AMD64 -DSIZE_64 \
		-DOPSYS_UNIX -DOPSYS_FREEBSD -D_GNU_SOURCE -DGNU_ASSEMBLER -DDLOPEN \
		-DINDIRECT_CFUNC
TARGET =	AMD64
VERSION =	v-amd64-freebsd
RUNTIME =	run.amd64-freebsd
RUNTIME_SO =	run.amd64-freebsd.so
RUNTIME_A =	run.amd64-freebsd.a

all:
	($(MAKE) CHECK_HEAP=$(CHECK_HEAP) RUNTIME="$(RUNTIME)" VERSION="$(VERSION)" AS="$(AS)" CC="$(CC)" CFLAGS="$(CFLAGS)" CXX="$(CXX)" CXX_FLAGS="$(CXX_FLAGS)" CPP="$(CPP)" TARGET=$(TARGET) DEFS="$(DEFS)" XOBJS="$(XOBJS)" XLIBS="$(XLIBS)" LD_LIBS="$(LD_LIBS)" $(RUNTIME))
#	($(MAKE) RUNTIME="$(RUNTIME_SO)" VERSION="$(VERSION)" AS="$(AS)" CC="$(CC)" CFLAGS="$(CFLAGS)" CXX="$(CXX)" CXX_FLAGS="$(CXX_FLAGS)" CPP="$(CPP)" TARGET=$(TARGET) DEFS="$(DEFS)" XOBJS="$(XOBJS)" XLIBS="$(XLIBS)" LD_LIBS="$(LD_LIBS)" LDFLAGS="-shared" $(RUNTIME_SO))
#	($(MAKE) RUNTIME_A="$(RUNTIME_A)" VERSION="$(VERSION)" AS="$(AS)" CC="$(CC)" CFLAGS="$(CFLAGS)" CXX="$(CXX)" CXX_FLAGS="$(CXX_FLAGS)" CPP="$(CPP)" TARGET=$(TARGET) DEFS="$(DEFS)" XOBJS="$(XOBJS)" XLIBS="$(XLIBS)" LD_LIBS="$(LD_LIBS)" LDFLAGS="" $(RUNTIME_A))
