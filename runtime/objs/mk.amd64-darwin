# mk.amd64-darwin
#
# COPYRIGHT (c) 2025 The SML/NJ Fellowship
#
# Makefile for macOS 11+ (Big Sur or later) on 64-bit Intel processors
#

# WARNING: the following should agree with the value of CMAKE_OSX_DEPLOYMENT_TARGET
# that is set in the LLVM CMakePresets.json file
#
SDK =		-mmacosx-version-min=11

SHELL =		/bin/sh

MAKE =		make
# Explicitly stating the target to let Arm machines use x64 system headers
# and assembler.
AS =		/usr/bin/as -target x86_64-apple-darwin
CC =		/usr/bin/clang -m64 -std=c99 -target x86_64-apple-darwin
CFLAGS =	-g -O2 -D_DARWIN_C_SOURCE
CXX =           c++ --std=c++17
CXX_FLAGS =     -g -O2
CPP =           cc -x assembler-with-cpp -E -P -std=c99
XOBJS =
XLIBS =         ../c-libs/dl/libunix-dynload.a
LD_LIBS =
XDEFS =
#XDEFS =		-DDEBUG_TRACE_CCALL -DVERBOSE -DCHECK_HEAP -DASSERT_ON -DDEBUG_WEAK_PTRS
BASE_DEFS =
DEFS =		$(XDEFS) $(BASE_DEFS) -DARCH_AMD64 -DSIZE_64 \
		-DOPSYS_UNIX -DOPSYS_DARWIN -DGNU_ASSEMBLER -DDLOPEN -DINDIRECT_CFUNC
TARGET =	AMD64
# for cross compilation
TARGET_ARCHS =	all
VERSION =	v-amd64-darwin
RUNTIME =	run.amd64-darwin
RUNTIMEX =	runx.amd64-darwin

BUILD_TARGETS =	$(RUNTIME)
# BUILD_TARGETS = $(RUNTIME) $(RUNTIMEX)

all:		$(BUILD_TARGETS)

install:        $(BUILD_TARGETS)
	mv $(BUILD_TARGETS) ../../bin/.run/

$(RUNTIME):
	($(MAKE) RUNTIME="$(RUNTIME)" VERSION="$(VERSION)" CC="$(CC)" CFLAGS="$(CFLAGS)" CXX="$(CXX)" CXX_FLAGS="$(CXX_FLAGS)" CPP="$(CPP)" AS="$(AS)" TARGET=$(TARGET) TARGET_ARCHS=$(TARGET_ARCHS) DEFS="$(DEFS)" XOBJS="$(XOBJS)" XLIBS="$(XLIBS)" LD_LIBS="$(LD_LIBS)" $(RUNTIME))

$(RUNTIMEX):
	($(MAKE) RUNTIME="$(RUNTIMEX)" VERSION="$(VERSION)" CC="$(CC)" CFLAGS="$(CFLAGS)" CXX="$(CXX)" CXX_FLAGS="$(CXX_FLAGS)" CPP="$(CPP)" TARGET=$(TARGET) DEFS="$(DEFS)" XOBJS="$(XOBJS)" XLIBS="$(XLIBS)" LD_LIBS="$(LD_LIBS)" LDFLAGS="-Xlinker -r" $(RUNTIMEX))
