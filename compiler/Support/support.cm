(* Support/support.cm
 *
 * COPYRIGHT (c) 2017 The Fellowship of SML/NJ (http://www.smlnj.org)
 * All rights reserved.
 *
 * Support library: Some basic compiler support modules not involving the compiler
 *    internal structures.
 *)

Library

  (* control/ *)
  structure PrintControl
  structure ElabDataControl
  structure ElaboratorControl
  structure FLINTControl
  structure CodeGenControl
  structure TopLevelControl
  structure CompilerControl
  structure Control  (* could just export Control to get them all *)

  (* errormsg/ *)
  structure ErrorMsg

  (* source/ *)
  structure Source
  structure SourceMap

  (* config/ *)
  structure Endianess
  structure Target

  (* stats/ *)
  structure Stats

is

(* ------------------------------- Members ------------------------------- *)

(* Support/control/ *)
control/print-control.sig
control/print-control.sml
control/parser-control.sig
control/parser-control.sml
control/elabdata-control.sig
control/elabdata-control.sml
control/elaborator-control.sig
control/elaborator-control.sml
control/matchcomp-control.sig
control/matchcomp-control.sml
control/flint-control.sig
control/flint-control.sml
control/codegen-control.sig
control/codegen-control.sml
control/toplevel-control.sig
control/toplevel-control.sml
control/compiler-control.sig
control/compiler-control.sml
control/control.sig
control/control.sml

(* Support/errormsg/ *)
errormsg/errormsg.sig
errormsg/errormsg.sml
errormsg/pperrormsg.sml

(* Support/config/ *)
#if defined(TARGET_BIG_ENDIAN)
        config/endianess-big.sml
#elif defined(TARGET_LITTLE_ENDIAN)
        config/endianess-little.sml
        (* falling back on host-specific endianness spec *)
#elif defined(BIG_ENDIAN)
	config/endianess-big.sml
#else
	config/endianess-little.sml
#endif

config/target.sig

#if defined(TARGET_SIZE_32)
        config/target32.sml
#elif defined(TARGET_SIZE_64)
        config/target64.sml
        (* falling back on host-specific size spec *)
#elif defined(SIZE_32)
	config/target32.sml
#else
	config/target64.sml
#endif

(* Support/source/ *)
source/pathnames.sml
source/source.sig
source/source.sml
source/sourceutil.sml
source/sourcemap.sig
source/sourcemap.sml
source/ppsourcemap.sml

(* Support/stats/ *)
stats/stats.sml

(* ------------------------------- Imports ------------------------------- *)

(* Basis *)
$smlnj/basis/basis.cm

(* smlnj-lib *)
$smlnj/smlnj-lib/prettyprint-lib.cm
  (* Formatting, PrintFormat: used in errormsg/pperrormsg.sml, source/ppsourcemap.sml, ... *)
