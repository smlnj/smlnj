(* compiler/CPS/cps.cm
 *
 * COPYRIGHT (c) 2023 The Fellowship of SML/NJ (http://www.smlnj.org)
 * All rights reserved.
 *
 * The CPS representation, translation to CPS from FLINT, and CPS optimization stages.
 *
 * Imported into component libraries CodeGen/codegen.cm and TopLevel/toplevel.cm.
 *)

Library

(* ------------------------------- Exports ------------------------------- *)

  structure CPS         (* cps/cps.sml *)
  structure CPSUtil     (* cps/cps-util.sml *)
  structure PPCps       (* cps/ppcps.sml *)

  structure ObjectDesc  (* main/object-desc.sml *)
  signature MACH_SPEC   (* main/mach-spec.sig *)
  structure Cluster     (* main/cluster.sml *)
  functor CPSCompFn     (* main/cps-comp.sml -- fixed so it does not depend on NewCodeGen *)

  signature CPSCONTROL  (* main/control.sig *)
  structure CPSControl  (* main/control.sml *)

is
(* ------------------------------- Member files ------------------------------- *)

  cps/cps.sig
  cps/cps.sml
  cps/ppcps.sml
  cps/cps-util.sml

  main/cluster.sml    (* structure Cluster; may be replaced by NCG/main/cluster.sml *)
  main/cps-comp.sml
  main/feedback.sml
  main/limit.sml
  main/literals.sml
  main/new-literals.sml
  main/normalize-cluster.sml
  main/spill-fn.sml
  main/mach-spec.sig   (* these 3 moved (copied) from NCG/main -- they belong in CPS *)
  main/object-desc.sig (* OBJECT_DESC, used in mach-spec.sig *)
  main/object-desc.sml (* ObjectDesc, used only in CodeGen *)
  main/control.sig     (* CPSCONTROL *)
  main/control.sml     (* CPSControl *)

  convert/convert.sml
  convert/cpstrans.sml
  convert/switch.sml

  clos/globalfix.sml
  clos/closure.sml
  clos/freeclose.sml
  clos/staticprof.sml
  clos/unrebind.sml

  opt/contract.sml
  opt/contract-prim.sml (* uses ConstArith *)
  opt/cpsopt.sml
  opt/divcnv.sml
  opt/eta.sml
  opt/etasplit.sml
  opt/expand.sml
  opt/flatten.sml
  opt/infcnv.sml
  opt/lower.sml
  opt/num64cnv.sml
  opt/streqlcnv.sml
  opt/testcnv.sml
  opt/uncurry.sml

(* ------------------------------- Imports ------------------------------- *)

(* Basis *)
$smlnj/basis/basis.cm

(* smlnj-lib *)
$smlnj/smlnj-lib/smlnj-lib.cm
$smlnj/smlnj-lib/controls-lib.cm
$smlnj/smlnj-lib/prettyprint-lib.cm

(* compiler *)
$compiler/Basics/basics.cm
$compiler/ElabData/elabdata.cm (* Access, LambdaVar *)
$compiler/FLINT/flint.cm       (* FLINT *)

(* other *)
$compiler/Library/const-arith/const-arith-lib.cm   (* structure ConstArith *)


(* NOTES:

   CPSCompFn was called in CodeGen/main/code-gen-fn.sml, but it depends on several things
   defined in CodeGen: MACH_SPEC, CPStoCFGFn, CFGPickler, PPCfg. It should either be moved
   to CodeGen or its functionality should be split between a function in CSP that does not
   depend on CodeGen, and a function in CodeGen that deals with the cfg part.  If we move it
   to CodeGen, we would have to export 9 CSP modules that it depends on.  See the specs for
   CPS/main/cps-comp.sml in MAP-CPS.txt.

*)

