compiler/MAP-backend-amd64.txt

Map of compiler/backend-amd64.cm

compiler/

CDF: backend-amd64.cm
  Proxy: system/smlnj/viscomp/amd64.cm

(* ---------------------------- Exports ---------------------------- *)

structure AMD64StdCallBackend (* TopLevel/backend/amd64-stdcall.sml *)
structure AMD64CCallBackend   (* TopLevel/backend/amd64-ccall.sml *)

(* ---------------------------- Module Catalogue ---------------------------- *)

LOCAL:

AMD64StdCallBackend	TopLevel/backend/amd64-stdcall.sml
AMD64CCallBackend	TopLevel/backend/amd64-ccall.sml

IMPORTS:

BackendFn	      	TopLevel/backend/backend-fn.sml

CodeGeneratorFn		CodeGen/main/code-gen-fn.sml
DefaultMachSpecFn	CodeGen/main/default-machspec-fn.sml

AMD64Spec		CodeGen/targets/amd64-spec.sml


(* ---------------------------- Members [files] ---------------------------- *)

TopLevel/
backend/

  amd64-stdcall.sml
    < AMD64StdCallBackend
    > ----------
      AMD64Spec
      BackEndFn
      CodeGeneratorFn

  amd64-ccall.sml
    < AMD64CCallBackend
    > ----------
      AMD64Spec
      BackendFn
      CodeGeneratorFn


(* ---------------------------- Imports ---------------------------- *)

(* Basis *)
$smlnj/basis/basis.cm

(* viscomp *)
$smlnj/viscomp/toplevel.cm (* BackendFn *)
$smlnj/viscomp/codegen.cm  (* CodeGeneratorFn, DefaultMachSpecFn, AMD64Spec *)


(* ---------------------------- Notes ---------------------------- *)

TopLeve/backend could be moved into CodeGen (NewCodeGen). Then this
CDF would depend only on codegen.cm (or viscomp/codegen.cm?). There is no need
to pass these modules (functors) through core.cm.  Then the imports would
covered by codegen.cm alone.
