compiler/Admin/MAP-ADM.txt

Map of Admin (as a "library")

* Excluding use of modules from Basis (basis.cm) and smlnj-lib/Util (smlnj-lib.cm)
* Imports from outside the Admin library are indicated by an asterisk (e.g. LambdaVar*)
  [We assume imports from basis.cm and smlnj-lib.cm, generally without recording them here.]
* All-caps identifiers are assumed to be signatures. Initial caps identifiers are assumed
  to be structures, unless they end in "Fn", in which case they are assumed to be functors.
  These defaults can be overridden by qualifiers, e.g. "CPS [str]".

Admin/admin.cm -- the Admin Group/Library CDF

(* ---------------------------- Exports ---------------------------- *)

  structure PrintControl
  structure ElabDataControl
  structure ElaboratorControl
  structure FLINTControl
  structure CodeGenControl
  structure TopLevelControl
  structure CompilerControl
  structure Control  (* could just export Control *)

  structure ErrorMsg
  structure Source
  structure SourceMap

  structure Endianess
  structure Target

  structure Stats

  We don't need to export any signatures?

(* ---------------------------- Members ---------------------------- *)

Admin/control/
  print-control.sig
    < PRINT_CONTROL
    >
  print-control.sml
    < PrintControl
    >
      PRINT_CONTROL       (Admin/control/print-control.sig) 
  parser-control.sig
    < PARSER_CONTROL
    >
  parser-control.sml
    < ParserControl
    >
      PARSER_CONTROL      (Admin/control/parser-control.sig) 
  elabdata-control.sig
    < ELABDATA_CONTROL
    >
  elabdata-control.sml
    < ElabDataControl
    >
      ELABDATA_CONTROL    (Admin/control/elabdata-control.sig) 
  elaborator-control.sig
    < ELABORATOR_CONTROL
    >
  elaborator-control.sml
    < ElaboratorControl
    >
      ELABORATOR_CONTROL  (Admin/control/elaborator-control.sig) 
  matchcomp-control.sig
    < MATCHCOMP_CONTROL
    >
  matchcomp-control.sml
    < MatchCompControl
    >
      MATCHCOMP_CONTROL   (Admin/control/matchcomp-control.sig) 
  flint-control.sig
    < FLINT_CONTROL
    >
  flint-control.sml
    < FLINTControl
    >
      FLINT_CONTROL       (Admin/control/flint-control.sig) 
  codegen-control.sig
    < CODEGEN_CONTROL
    >
  codegen-control.sml
    < CodeGenControl
    >
      CODEGEN_CONTROL     (Admin/control/codegen-control.sig) 
  toplevel-control.sig
    < TOPLEVEL_CONTROL
    >
  toplevel-control.sml
    < TopLevelControl
    >
      TOPLEVEL_CONTROL    (Admin/control/toplevel-control.sig) 
  compiler-control.sig
    < COMPILER_CONTROL
    >
  compiler-control.sml
    < CompilerControl
    >
      COMPILER_CONTROL    (Admin/control/compiler-control.sig) 
  control.sig
    < CONTROL
    >
  control.sml
    < Control
    >
      CONTROL             (Admin/control/control.sig) 


Admin/errormsg/
  errormsg.sig
    < ERRORMSG
    > PrettyPrint*   prettyprint-lib.cm

      Source           (Admin/source/source.sml)

  errormsg.sml
    < ErrorMsg
    > PrettyPrint*   prettyprint-lib.cm

      ERRORMSG         (Admin/errormsg/errormsg.sig)
      Source           (Admin/source/source.sml)
      SourceMap        (Admin/source/sourcemap.sml)
      PPSourceMap      (Admin/source/ppsourcemap.sml)
      PrintControl     (Admin/control/print-control.sml)
      CompilerControl  (Admin/control/compiler-control.sml)

  pperrormsg.sml
    < PPErrorMsg
    > PrettyPrint*   prettyprint-lib.cm

      Source           (Admin/source/source.sml)
      SourceMap        (Admin/source/sourcemap.sml)


Admin/config/
  endianess-big.sml
    < Endianess
    >

  endianess-little.sml
    < Endianess
    >

  target.sig
    < TARGET
    >
    
  target32.sml
    < Target
    >

      TARGET     (Admin/config/target.sig)
      Endianess  (Admin/config/endianess-*.sml)

  target64.sml
    < Target
    >

      TARGET     (Admin/config/target.sig)
      Endianess  (Admin/config/endianess-*.sml)

 
Admin/source/
  pathnames.sml  -- useless, not used
    < Pathnames
    >
  source.sig
    < SOURCE
    > [TextIO: Basis]

  source.sml
    < Source
    > [TextIO: Basis]

      SOURCE

  sourceutil.sml
    < SourceUtil
    >
    
  sourcemap.sig
    < SOURCE_MAP
    >

      Source (Admin/source/source.sml)

  sourcemap.sml
    < SourceMap
    >
    
      SOURCE_MAP  (Admin/source/sourcemap.sig)

  ppsourcemap.sml
    < PPSourceMap
    > PrettyPrint*  prettyprint-lib.cm


Admin/stats/
  stats.sml
    < STATS
      Stats
    > [Time, Timer, SMLofNJ: Basis]

      PrintControl   (Admin/control/print-control.sml)

(* ---------------------------- Imports ---------------------------- *)

(* Basis *)
$smlnj/basis/basis.cm

(* smlnj-lib libraries *)
$smlnj/viscomp/prettyprint-lib.cm: PrettyPrint
  (used in: errormsg/errormsg.sml, errormsg/pperrormsg.sml, source/ppsourcemap.sml)
  ([Q] Should we be referencing prettyprint-lib.cm through viscomp? )
