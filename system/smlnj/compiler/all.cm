(* all.cm
 *
 * COPYRIGHT (c) 2021 The Fellowship of SML/NJ (http://www.smlnj.org)
 * All rights reserved.
 *
 * Library exporting "visible" compilers for all architectures.
 *
 * author: Matthias Blume (blume@research.bell-labs.com)
 *)

Library

  (* signatures not very usefule, so let's not export them
     -- they are not being exported from, e.g., $smlnj/compiler/amd64.cm.
	(* signatures *)
	signature STATS
	signature CONTROL
	signature SOURCE
	signature SOURCE_MAP
	signature ERRORMSG
	signature SYMBOL
	signature PERSSTAMPS
	signature STATICENV
	signature DYNAMICENV
	signature ENVIRONMENT
	signature ENVREF
	signature MODULE_ID
	signature PICKMOD
	signature UNPICKMOD
	signature AST
	signature ABSYN
	signature SMLFILE
	signature BINFILE
	signature FLINT
*)
       (* re-exported structures, or "pass-throughs"
        * DBM: Are these for the "visible compiler"? Seem a bit random. *)

	(* Support (currently from Basics) *)
	structure Stats
	structure Source
	structure SourceMap
	structure ErrorMsg
	structure CompileExn (* Basics/compiler/compileexn.sml *)

	(* Basic = Basics + ElabData/basics *)
	structure Symbol     (* Basics/symbol *)
	structure SymPath    (* ElabData/basics *)
        structure Stamps     (* ElabData/basics *)
	structure PersStamps (* Basics/pid/ *)
        structure Access     (* ElabData/basics *)
	structure CoreSym    (* ElabData/basics *)

	(* ElabData/main *)
	structure CompInfo

	(* ElabData/statenv *)
        structure Bindings
	structure StaticEnv
	structure GenModIdMap

        (* ElabData/prim *)
        structure PrimopId

	(* syntax -- from Parse & ElabData *)
	structure Ast      (* Parse/ast *)
	structure Absyn    (* ElabData/syntax *)
        structure Variable (* ElabData/syntax *)

        (* Parse *)
	structure SmlFile

	(* ElabData/types, ElabData/modules *)
        structure Types
        structure TypesUtil
        structure BasicTypes
        structure PPType
        structure EntityEnv
        structure Modules
        structure ModuleUtil
	structure ModuleId

	(* ElabData/pickle *)
	structure PickleSymPid
	structure UnpickleSymPid
	structure Rehash
	structure PickMod
	structure UnpickMod

	(* Execution (execute.cm) *)
	structure Binfile    (* binfile/ *)
	structure DynamicEnv (* dynenv/ *)

	(* FLINT *)
	structure FLINT

        (* TopLevel *)
	structure Control
	structure CompilerPPTable
	structure PrintHooks
	structure Environment
	structure EnvRef

        (* smlnj-version.cm *)
	structure SMLNJVersion

	(* Backend, backend-amd64.cm, backend-arm64.cm *)
	structure AMD64StdCallBackend
	structure AMD64CCallBackend
        structure Arm64Backend

	(* bootstrap (cross-)compilers *)
        structure Arm64UnixCMB
	structure AMD64UnixCMB

(* TODO:
        structure AMD64WindowsCMB
*)
is

(* members -- none *)

(* imports *)

	$smlnj/compiler/amd64.cm
	$smlnj/compiler/arm64.cm

	$smlnj/cmb/amd64-unix.cm
	$smlnj/cmb/arm64-unix.cm
